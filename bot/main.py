from bot import dp,bot,chatids_users, logger,user_languages
from aiogram import executor, types
from aiogram.utils.exceptions import BotBlocked
import text

# –ö–æ–º–∞–Ω–¥–∞ /start - –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
@dp.message_handler(commands=['start'])
async def language_selection(message: types.Message):
    # –ï—Å–ª–∏ chat.id –Ω–µ—Ç –≤ —Å–µ—Ç–µ (chatids_users) —Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç
    if not str(message.from_user.id) in chatids_users:
        chatids_users.add(message.from_user.id)
        # –ï—Å–ª–∏ chat.id –Ω–µ—Ç –≤ —Ñ–∞–π–ª–µ (chatids.txt) —Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç
        try:
            if str(message.from_user.id) not in open('chatids.txt').read():
                chatids_file = open("chatids.txt", "a")
                chatids_file.write(str(message.from_user.id) + "\n")
                chatids_file.close()
        except FileNotFoundError as e:
            # –°–æ–∑–¥–∞–Ω–∏–µ chatids.txt
            open("chatids.txt", "w").close()
            logger.error(e)
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton(text = "üá∫üá¶–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞")
    btn2 = types.KeyboardButton(text ="üá¨üáßEnglish")
    kb.add(btn1, btn2)
    await bot.send_chat_action(message.from_user.id, 'typing')
    await bot.send_message(message.from_user.id, text=text.language_selection, parse_mode="HTML")
    await bot.send_message(message.from_user.id, text=text.button_driver, parse_mode="HTML")
    await bot.send_message(message.from_user.id, text=text.eng_button_driver, parse_mode="HTML", reply_markup=kb)
    # await message.delete()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –≤ —Å–ª–æ–≤–∞—Ä—å (user_languages)
@dp.message_handler(lambda message: message.text in ['üá∫üá¶–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞', 'üá¨üáßEnglish'])
async def language_preservation(message: types.Message):
    user_languages[message.from_user.id] = message.text
    await bot.send_chat_action(message.from_user.id, 'typing')
    await bot.send_photo(message.from_user.id, open('image/start.jpg', 'rb'))
    await main_menu (message)
    
# –ö–æ–º–∞–Ω–¥–∞ /menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.message_handler(commands=['menu'])
async def main_menu(message: types.Message):
        await bot.send_chat_action(message.from_user.id, 'typing')
        if message.from_user.id in user_languages and user_languages[message.from_user.id] == 'üá¨üáßEnglish':
            await bot.send_message(message.from_user.id, text = text.eng_privetstvie)
            kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            btn1 = types.KeyboardButton(text = "\U0001f64fHelp the project")
            btn2 = types.KeyboardButton(text="\U0001faf6About us")
            kb.add(btn1, btn2)
            await bot.send_message(message.from_user.id, text=text.eng_button_driver,reply_markup=kb)
        else:
            await bot.send_message(message.from_user.id, text = text.privetstvie)
            kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            btn1 = types.KeyboardButton(text = "\U0001f198–û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–ø–æ–º–æ–≥—É")
            btn2 = types.KeyboardButton(text ="\U0001f64f–î–æ–ø–æ–º–æ–≥—Ç–∏ –ø—Ä–æ–µ–∫—Ç—É")
            btn3 = types.KeyboardButton(text ="\U0001f3eb–û—Å–≤—ñ—Ç–Ω—ñ –∑–∞—Ö–æ–¥–∏")
            btn4 = types.KeyboardButton(text="\U0001faf6–ü—Ä–æ –Ω–∞—Å")
            kb.add(btn1, btn2, btn3, btn4)
            await bot.send_message(message.from_user.id, text=text.button_driver,reply_markup=kb)
            
# –ö–æ–º–∞–Ω–¥–∞ /share - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.message_handler(commands=['share'])#–ù–µ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å—Å—è –Ω–∞ –∞–Ω–≥–ª.
async def share (message: types.Message):
    await bot.send_chat_action(message.from_user.id, 'typing')
    if message.from_user.id in user_languages and user_languages[message.from_user.id] == 'üá¨üáßEnglish':
        await bot.send_message(message.from_user.id, text=text.eng_zag_share, parse_mode='HTML')
        await bot.send_message(message.from_user.id, text=text.eng_osn_share, parse_mode='HTML')
    else:
        await bot.send_message(message.from_user.id, text=text.zag_share, parse_mode='HTML')
        await bot.send_message(message.from_user.id, text=text.osn_share, parse_mode='HTML')

#–ö–æ–º–∞–Ω–¥–∞ /send - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.message_handler(commands=['send'])
async def send_a_message(message: types.Message):
    #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
    if message.from_user.id in (759572442, 402411612):
        for user in chatids_users:
            try:
                await bot.send_message(user, message.text[message.text.find(' '):])
            except BotBlocked as e:
                logger.error(f'{e}: {user}')
    #–µ—Å–ª–∏ –Ω–µ –∞–¥–º–∏–Ω –≤—ã–±–∏–≤–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é (–Ω–µ–ø–æ–Ω–∏–º–∞–π–∫—É)
    else:
        await bot.send_chat_action(message.from_user.id, 'typing')
        if message.from_user.id in user_languages and user_languages[message.from_user.id] == 'üá¨üáßEnglish':
            await bot.send_message(message.from_user.id, text=text.eng_nezrozymiv, parse_mode='HTML')
            await bot.send_photo(message.from_user.id, open('image/nezrozymiv.jpg', 'rb'))
        else:
            await bot.send_message(message.from_user.id, text=text.nezrozymiv, parse_mode='HTML')
            await bot.send_photo(message.from_user.id, open('image/nezrozymiv.jpg', 'rb'))

if __name__ == '__main__':
    logger.info("–°—Ç–∞—Ä—Ç")
    executor.start_polling(dp, skip_updates=True)